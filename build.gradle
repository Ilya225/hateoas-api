buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-hateoas')
	compile("org.springframework.boot:spring-boot-starter-data-mongodb")

	compile group: 'joda-time', name: 'joda-time', version: '2.9.9'
	compileOnly 'org.projectlombok:lombok:1.16.18'
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.6.0'
	//compile('org.springframework.boot:spring-boot-starter-validation')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('com.h2database:h2')
	testCompile("com.jayway.jsonpath:json-path")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

task dockerComposeUpDev(type: Exec) {
	commandLine 'docker-compose'
	args = [ '-f', 'docker-compose.dev.yml', 'up', '-d' ]
}

tasks.bootRun.dependsOn(dockerComposeUpDev)
